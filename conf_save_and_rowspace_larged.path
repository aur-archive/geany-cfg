diff -upr a/scintilla/gtk/PlatGTK.cxx b/scintilla/gtk/PlatGTK.cxx
--- a/scintilla/gtk/PlatGTK.cxx	2012-01-04 03:15:04.000000000 +0900
+++ b/scintilla/gtk/PlatGTK.cxx	2012-08-22 17:17:06.851335417 +0900
@@ -25,6 +25,8 @@
 #include "UniConversion.h"
 #include "XPM.h"
 
+#define FONTPAD     3
+
 /* GLIB must be compiled with thread support, otherwise we
    will bail on trying to use locks, and that could lead to
    problems for someone.  `glib-config --libs gthread` needs
@@ -1996,7 +1998,7 @@ int SurfaceImpl::Ascent(Font &font_) {
 		ascent = 1;
 	}
 	FontMutexUnlock();
-	return ascent;
+	return ascent + FONTPAD;
 #else
 
 	gint lbearing;
@@ -2007,7 +2009,7 @@ int SurfaceImpl::Ascent(Font &font_) {
 
 	gdk_string_extents(PFont(font_)->pfont, sizeString,
 					   &lbearing, &rbearing, &width, &ascent, &descent);
-	return ascent;
+	return ascent + FONTPAD;
 #endif
 }
 
@@ -2021,10 +2023,10 @@ int SurfaceImpl::Descent(Font &font_) {
 			PFont(font_)->pfd, pango_context_get_language(pcontext));
 		int descent = PANGO_PIXELS(pango_font_metrics_get_descent(metrics));
 		pango_font_metrics_unref(metrics);
-		return descent;
+		return descent + FONTPAD;
 	}
 #ifndef DISABLE_GDK_FONT
-	return PFont(font_)->pfont->descent;
+	return PFont(font_)->pfont->descent + FONTPAD;
 #else
 	return 0;
 #endif
@@ -2038,7 +2040,7 @@ int SurfaceImpl::Descent(Font &font_) {
 
 	gdk_string_extents(PFont(font_)->pfont, sizeString,
 					   &lbearing, &rbearing, &width, &ascent, &descent);
-	return descent;
+	return descent + FONTPAD;
 #endif
 }
 
diff -upr a/src/callbacks.c b/src/callbacks.c
--- a/src/callbacks.c	2012-06-18 07:49:53.000000000 +0900
+++ b/src/callbacks.c	2012-08-22 17:18:29.018004311 +0900
@@ -181,6 +181,7 @@ G_MODULE_EXPORT void on_save1_activate(G
 G_MODULE_EXPORT void on_save_as1_activate(GtkMenuItem *menuitem, gpointer user_data)
 {
 	dialogs_show_save_as();
+	configuration_save();
 }
 



 
--- a/src/dialogs.c	2012-10-20 12:39:24.372678239 +0900
+++ b/src/dialogs.c	2012-10-20 13:12:33.799712318 +0900
@@ -159,6 +159,7 @@ static void open_file_dialog_handle_resp
 		{
 			document_open_files(filelist, ro, ft, charset);
 			g_slist_foreach(filelist, (GFunc) g_free, NULL);	/* free filenames */
+			configuration_save ();
 		}
 		g_slist_free(filelist);
 	}
--- a/src/callbacks.c	2012-10-20 12:39:24.372678239 +0900
+++ b/src/callbacks.c	2012-10-20 13:20:05.416461108 +0900
@@ -175,6 +175,8 @@ G_MODULE_EXPORT void on_save1_activate(G
 	{
 		document_save_file(doc, FALSE);
 	}
+
+	configuration_save();
 }
 
 
@@ -191,6 +193,8 @@ G_MODULE_EXPORT void on_save_all1_activa
 	GeanyDocument *doc, *cur_doc = document_get_current();
 	guint count = 0;
 
+	configuration_save();
+
 	/* iterate over documents in tabs order */
 	for (i = 0; i < max; i++)
 	{
@@ -214,6 +218,7 @@ G_MODULE_EXPORT void on_save_all1_activa
 G_MODULE_EXPORT void on_close_all1_activate(GtkMenuItem *menuitem, gpointer user_data)
 {
 	document_close_all();
+	configuration_save ();
 }
 
 
@@ -224,6 +229,8 @@ G_MODULE_EXPORT void on_close1_activate(
 	g_return_if_fail(doc != NULL);
 
 	document_close(doc);
+
+	configuration_save ();
 }
 
 
